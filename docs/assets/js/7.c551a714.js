(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{393:function(e,r,t){"use strict";t.r(r);var a=t(52),s=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"table-of-contents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[e._v("#")]),e._v(" Table of Contents")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#lexgen-code"}},[e._v("lexgen-code")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#buildlexer"}},[e._v("buildLexer")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#parameters"}},[e._v("Parameters")])])])]),e._v(" "),t("li",[t("a",{attrs:{href:"#reset"}},[e._v("reset")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#parameters-1"}},[e._v("Parameters")])])])]),e._v(" "),t("li",[t("a",{attrs:{href:"#next"}},[e._v("next")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#save"}},[e._v("save")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#formaterror"}},[e._v("formatError")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#parameters-2"}},[e._v("Parameters")])])])])]),e._v(" "),t("h2",{attrs:{id:"lexgen-code"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lexgen-code"}},[e._v("#")]),e._v(" lexgen-code")]),e._v(" "),t("p",[e._v("This module exports the functions buildLexer and nearleyLexer\nthat allows to create lexical analyzers")]),e._v(" "),t("p",[t("strong",[e._v("Meta")])]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("since")]),e._v(": 28/03/2122 22/03/2022")]),e._v(" "),t("li",[t("strong",[e._v("author")]),e._v(": Casiano Rodríguez León <crguezl@ull.edu.es>")])]),e._v(" "),t("h2",{attrs:{id:"buildlexer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#buildlexer"}},[e._v("#")]),e._v(" buildLexer")]),e._v(" "),t("p",[e._v("Creates two lexical analyzers ...")]),e._v(" "),t("h3",{attrs:{id:"parameters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[e._v("#")]),e._v(" Parameters")]),e._v(" "),t("ul",[t("li",[t("p",[t("code",[e._v("regexps")]),e._v(" "),t("strong",[t("a",{attrs:{href:"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array",target:"_blank",rel:"noopener noreferrer"}},[e._v("array"),t("OutboundLink")],1)]),e._v(" An array of regular expressions.\nRegexps must be named using a parenthesis. Example: "),t("code",[e._v("/(?<NAME>.)/")]),e._v(".\nFill the documentation ...\n"),t("strong",[e._v("Note")]),e._v(": When two regexps can match the one that appears\nearlier will be chosen")])]),e._v(" "),t("li",[t("p",[e._v("Throws "),t("strong",[t("a",{attrs:{href:"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error",target:"_blank",rel:"noopener noreferrer"}},[e._v("Error"),t("OutboundLink")],1)]),e._v(" Will throw if someregular expression isn't named\nor has more than one name")])])]),e._v(" "),t("p",[e._v("Returns "),t("strong",[t("a",{attrs:{href:"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object",target:"_blank",rel:"noopener noreferrer"}},[e._v("Object"),t("OutboundLink")],1)]),e._v(" The map of valid tokens and a lexical analyzer in form of a function")]),e._v(" "),t("h2",{attrs:{id:"reset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reset"}},[e._v("#")]),e._v(" reset")]),e._v(" "),t("p",[e._v("Sets the internal buffer to data, and restores line/col/state info taken from save().\nCompatibility not tested")]),e._v(" "),t("h3",{attrs:{id:"parameters-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parameters-2"}},[e._v("#")]),e._v(" Parameters")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("data")])]),e._v(" "),t("li",[t("code",[e._v("info")])])]),e._v(" "),t("h2",{attrs:{id:"next"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#next"}},[e._v("#")]),e._v(" next")]),e._v(" "),t("p",[e._v("Returns e.g. {type, value, line, col, …}. Only the value attribute is required.")]),e._v(" "),t("h2",{attrs:{id:"save"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#save"}},[e._v("#")]),e._v(" save")]),e._v(" "),t("p",[e._v("Returns an object describing the current line/col etc. This allows nearley.JS\nto preserve this information between feed() calls, and also to support Parser#rewind().\nThe exact structure is lexer-specific; nearley doesn't care what's in it.")]),e._v(" "),t("h2",{attrs:{id:"formaterror"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#formaterror"}},[e._v("#")]),e._v(" formatError")]),e._v(" "),t("p",[e._v("Returns a string with an error message describing the line/col of the offending token.\nYou might like to include a preview of the line in question.")]),e._v(" "),t("h3",{attrs:{id:"parameters-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parameters-3"}},[e._v("#")]),e._v(" Parameters")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("token")])])])])}),[],!1,null,null,null);r.default=s.exports}}]);